@using K9.Base.DataAccessLayer.Enums
@using K9.Base.WebApplication.Extensions
@using K9.SharedLibrary.Authentication
@model ArchiveItem

@{
    var roles = this.GetRoles();
}


@Html.BootstrapEditorFor(model => model.PublishedOn)
@Html.HiddenFor(model => model.PublishedBy)
@Html.BootstrapEditorFor(model => model.Language)
@Html.BootstrapEditorFor(model => model.TypeId)
@Html.BootstrapEditorFor(model => model.CategoryId)
@Html.BootstrapEditorFor(model => model.FileSource)
@Html.BootstrapEditorFor(model => model.Url, new EditorOptions
{
    IsHidden = !Model.IsDisplayUrl
})
@Html.BootstrapEditorFor(model => model.Title)
@Html.BootstrapEditorFor(model => model.DescriptionText)
@Html.BootstrapEditorFor(model => model.IsShowLocalOnly)
@if (roles.CurrentUserIsInRoles(RoleNames.Administrators))
{
    @Html.BootstrapEditorFor(model => model.IsHideMetaData)
}

<script type="text/javascript">

    function setAcceptedFileExtensionsByType() {
        var fileInput = $("#FileSource_PostedFile");
        var type = $("#TypeId")[0].getSelectedText();
        $.fn.setAcceptedFileExtensions(fileInput, type);
    }

    function setInputVisibility() {
        var type = $("#TypeId")[0].getSelectedText();
        var isUrlVisible = type === "@MvcHtmlString.Create(Dictionary.Videos)" || type === "@MvcHtmlString.Create(Dictionary.Links)";
        var isFileSourceVisible = type !== "@MvcHtmlString.Create(Dictionary.Links)";
        var urlField = $("div[data-input-id=Url]");
        var fileSourceField = $("div[data-input-id=FileSource]");
        isUrlVisible ? urlField.show() : urlField.hide();
        isFileSourceVisible ? fileSourceField.show() : fileSourceField.hide();
    }

    function updateLinkMetaData(url) {
        ajaxcontroller().get("@Url.Action("GetLinkPreview", "Archive")", { url: url }).done(
            function(result) {
                if (result.success && result.data) {
                    if(result.data.Title)
                        $("#Title").val(result.data.Title);

                    if(result.data.Description)
                        $("#DescriptionText").val(result.data.Description);
                }
                $("#pageSpinner").hide();
            });
    }

    function updateDisplayLocalMessage() {
        var language = $("#Language").val();
        var $label = $("#IsShowLocalOnly").closest("label").find("span");
        if (language === "@((int)ELanguage.French)") {
            $label.html("@K9.Globalisation.Dictionary.ShowOnlyOnFrenchSite");
        }
        else
        {
            $label.html("@K9.Globalisation.Dictionary.ShowOnlyOnEnglishSite");
        }
    }

    function init() {
        setAcceptedFileExtensionsByType();
        updateDisplayLocalMessage();
    }

    $(function() {
        $("#TypeId").change(function() {
            setAcceptedFileExtensionsByType();
            setInputVisibility();
        });

        $("#Language").change(function () {
            updateDisplayLocalMessage();
        });

        $("#Url").keyup(function() {
            var url = $(this).val();
            if (url.length > 5) {
                $("#pageSpinner").show();
                updateLinkMetaData(url);
            }
        });

        window.setTimeout(init, 500);
    });
</script>